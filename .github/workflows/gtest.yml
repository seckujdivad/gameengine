# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Cache vcpkg
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: /vcpkg/
          key: ${{ runner.os }}-vcpkg-binaries

          # Restore from cache the previously built ports. If cache-miss, download, build vcpkg.
      - name: Restore from cache and install vcpkg
        # Download and build vcpkg, without installing any port. If content is cached already, it is a no-op.
        uses: lukka/run-vcpkg@v5
        with:
          setupOnly: true
          vcpkgGitCommitId: 5dc53211c
      - run: $VCPKG_ROOT/vcpkg integrate install
        shell: bash

      # Now that vcpkg is installed, it is being used to run desired arguments.
      - run: $VCPKG_ROOT/vcpkg install @vcpkg_install.txt
        shell: bash
      
      - name: setup-msbuild
        uses: microsoft/setup-msbuild@v1

      - name: Cache project binaries
        uses: pat-s/always-upload-cache@v2.1.3
        with:
          path: /Debug/
          key: ${{ runner.os }}-binaries

      # Runs a single command using the runners shell
      - name: Build gameengine
        run: msbuild gameengine/gameengine.vcxproj

      # Runs a set of commands using the runners shell
      - name: Build gameengine-GTest
        run: msbuild gameengine-GTest/gameengine-GTest.vcxproj
      
      - name: Run gameengine-GTest
        run: "Debug/gameengine-GTest.exe"
